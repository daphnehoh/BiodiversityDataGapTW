pal <- colorNumeric(palette = "YlOrRd", domain = df_map$occCount)
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
pal = pal,
values = ~occCount,
opacity = 1,
title = "Record count",
position = "bottomright")
print(class(df_map))  # C
print(dim(df_map))    # Che
## show all records map
df_map <- sf::st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_map.shp")
pal <- colorNumeric(palette = "YlOrRd", domain = df_map$occCount)
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
pal = pal,
values = ~occCount,
opacity = 1,
title = "Record count",
position = "bottomright")
class(df_map)
df_map
df_map <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/st_map_allRecords_grid.shp")
df_map
df_map$occCount <- 1:4232
df_map
pal <- colorNumeric(palette = "YlOrRd", domain = df_map$occCount)
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
pal = pal,
values = ~occCount,
opacity = 1,
title = "Record count",
position = "bottomright")
eaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton()
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton()
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount))
pal
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
pal = pal,
values = ~occCount,
opacity = 1,
title = "Record count",
position = "bottomright")
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
pal = pal,
values = ~pal(occCount),
opacity = 1,
title = "Record count",
position = "bottomright")
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount))
str(df_map)
df_map <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/st_map_allRecords_grid.shp")
df_map$occCount <- as.numeric(1:4232)
pal <- colorNumeric(palette = "YlOrRd", domain = df_map$occCount)
pal
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount))
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
pal = pal,
values = ~occCount,
opacity = 1,
title = "Record count",
position = "bottomright")
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
position = "bottomright",
pal = pal,
values = ~occCount,
title = "Occurrences",
opacity = 0.7)
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
position = "bottomright",
#pal = pal,
values = ~occCount,
title = "Occurrences",
opacity = 0.7)
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
position = "bottomright",
pal = pal,
#values = ~occCount,
title = "Occurrences",
opacity = 0.7)
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
position = "bottomright",
pal = pal,
values = ~occCount,
title = "Occurrences",
opacity = 0.7)
atr(dr_map)
str(df_map)
map <- leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton()
map
map <- map %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)
)
map
map <- map %>%
addLegend(
position = "bottomright",
pal = pal,
values = ~occCount,
title = "Occurrences",
opacity = 0.7
)
install.packages(c("arrow", "ggplot2", "leaflet.extras", "markdown", "openssl", "PKI", "rgbif", "rlang", "rsconnect", "sp", "stringi", "tinytex"))
install.packages(c("backports", "brio", "broom", "cachem", "DBI", "downlit", "evaluate", "farver", "fastmap", "fs", "ggplot2", "gtable", "highr", "KernSmooth", "knitr", "labelled", "markdown", "nlme", "openssl", "pixmap", "pkgdown", "ragg", "RcppArmadillo", "rgbif", "rlang", "rmarkdown", "sdm", "sp", "stringi", "survival", "systemfonts", "terra", "textshaping", "tinytex", "xfun", "xopen"), lib="/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library")
install.packages("arrow")
df_map <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/st_map_allRecords_grid.shp")
library(shiny)
library(tidyverse)
library(leaflet)
library(leaflet.providers)
library(leaflet.extras)
library(rvest)
library(DT)
library(sp)
library(sf)
library(data.table)
library(plotly)
df_map <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/st_map_allRecords_grid.shp")
df_map$occCount <- as.numeric(1:4232)
pal <- colorNumeric(palette = "YlOrRd", domain = df_map$occCount)
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_map,
fillColor = ~pal(occCount),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCount)) %>%
addLegend(
position = "bottomright",
pal = pal,
values = ~occCount,
title = "Occurrences",
opacity = 0.7)
runApp()
## show selected taxa
df_taxa_map <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_taxa_map.shp")
df_taxa_map
df_taxa_map$txOccCn
## show selected taxa
df_taxa_map <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_taxa_map.shp")
df_taxa_map
## show selected taxa
df_taxa_map <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_taxa_map.shp")
df_taxa_map
pal <- colorNumeric(palette = "YlOrRd", domain = df_taxa_map$occCont)
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120, lat = 21, zoom = 7) %>%
addResetMapButton() %>%
addPolygons(
data = df_taxa_map,
fillColor = ~pal(occCont),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", occCont))
df_taxa_map
runApp()
df_spatial_allOccCount_grid_table
# Section : Spatial
## Load taxa table
df_spatial_allOccCount_grid_table <- fread("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_spatial_allOccCount_grid_table.csv",
sep = ",", colClasses = "character", encoding = "UTF-8", na.strings = c("", "NA", "N/A"))
df_spatial_allOccCount_grid_table
# Load map data
df_map <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_map.shp")
df_map
df_taxa_map
runApp()
leaflet::onMoveEnd
leaflet::onMoveEnd()
onMoveEnd
runApp()
df_taxa_map <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_taxa_map.shp")
df_taxa_map
df_taxa_map <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_taxa_map.shp")
df_taxa_map
runApp()
proxy <- leafletProxy("spatialMap")
runApp()
## gapMap
## grid layer
occ.grid5km_sf <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/tmp/to_grid5km.shp")
pal <- colorNumeric(palette = "YlOrRd", domain = occ.grid5km_sf$allOccC)
occ.grid5km_sf
leaflet() %>%
addProviderTiles(providers$Stadia) %>%
setView(lng = 120.5, lat = 22.5, zoom = 7) %>%
addProviderTiles(providers$OSM, group = "OSM") %>%
addProviderTiles(providers$USGS, group = "USGS") %>%
addLayersControl(
baseGroups = c("Stadia", "OSM", "USGS"),
options = layersControlOptions(collapsed = TRUE)) %>%
addResetMapButton() %>%
addPolygons(
data = occ.grid5km_sf,
fillColor = ~pal(nmbr_f_),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", nmbr_f_)) %>%
addLegend(
data = occ.grid5km_sf,
pal = pal,
values = ~nmbr_f_,
opacity = 0.5,
title = "Record count",
position = "bottomright")
leaflet() %>%
addTiles() %>%
setView(lng = 120.5, lat = 22.5, zoom = 7) %>%
addProviderTiles(providers$OSM, group = "OSM") %>%
addProviderTiles(providers$USGS, group = "USGS") %>%
addLayersControl(
baseGroups = c("Stadia", "OSM", "USGS"),
options = layersControlOptions(collapsed = TRUE)) %>%
addResetMapButton() %>%
addPolygons(
data = occ.grid5km_sf,
fillColor = ~pal(nmbr_f_),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", nmbr_f_)) %>%
addLegend(
data = occ.grid5km_sf,
pal = pal,
values = ~nmbr_f_,
opacity = 0.5,
title = "Record count",
position = "bottomright")
runApp()
leaflet() %>%
addTiles() %>%
setView(lng = 120.5, lat = 22.5, zoom = 7)
leaflet() %>%
addTiles() %>%
setView(lng = 120.5, lat = 22.5, zoom = 7) %>%
addProviderTiles(providers$Stadia, group = "Stadia") %>%
addProviderTiles(providers$USGS, group = "USGS")
leaflet() %>%
addTiles() %>%
setView(lng = 120.5, lat = 22.5, zoom = 7) %>%
addProviderTiles(providers$Stadia, group = "Stadia") %>%
addProviderTiles(providers$USGS, group = "USGS") %>%
addLayersControl(
baseGroups = c("OSM", "Stadia", "USGS"),
options = layersControlOptions(collapsed = TRUE)) %>%
addResetMapButton()
leaflet() %>%
addTiles() %>%
setView(lng = 120.5, lat = 22.5, zoom = 7) %>%
addProviderTiles(providers$Stadia, group = "Stadia") %>%
addProviderTiles(providers$USGS, group = "USGS") %>%
addLayersControl(
baseGroups = c("OSM", "Stadia", "USGS"),
options = layersControlOptions(collapsed = TRUE)) %>%
addResetMapButton() %>%
addPolygons(
data = occ.grid5km_sf,
fillColor = ~pal(nmbr_f_),
weight = 1,
opacity = 1,
color = 'white',
fillOpacity = 0.5,
popup = ~paste("Number of records:", nmbr_f_)) %>%
addLegend(
data = occ.grid5km_sf,
pal = pal,
values = ~nmbr_f_,
opacity = 0.5,
title = "Record count",
position = "bottomright")
runApp()
# Section: Fill gap
## gapCount table
gapCountdf <- fread("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_gapCount_table.csv",
sep = ",", colClasses = "character", encoding = "UTF-8", na.strings = c("", "NA", "N/A"))
# Section: Fill gap
## gapCount table
gapCountdf <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_gapCount_table.shp")
# Section: Fill gap
## gapCount table
gapCountdf <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_gapCount_table.shp")
datatable(gapCountdf, options = list(searching = FALSE, paging = FALSE))
# Section: Fill gap
## gapCount table
gapCountdf <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_gapCount_table.shp")
datatable(gapCountdf, options = list(searching = FALSE, paging = FALSE))
# Section: Fill gap
## gapCount table
gapCountdf <- fread("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_gapCount_table.csv",
sep = ",", encoding = "UTF-8", na.strings = c("", "NA", "N/A")))
# Section: Fill gap
## gapCount table
gapCountdf <- fread("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_gapCount_table.csv",
sep = ",", encoding = "UTF-8", na.strings = c("", "NA", "N/A"))
datatable(gapCountdf, options = list(searching = FALSE, paging = FALSE))
})
# Section: Fill gap
## gapCount table
gapCountdf <- fread("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_gapCount_table.csv",
sep = ",", encoding = "UTF-8", na.strings = c("", "NA", "N/A")) %>% na.omit()
gapCountdf
datatable(gapCountdf, options = list(searching = FALSE, paging = FALSE))
# Section: Fill gap
## gapCount table
gapCountdf <- fread("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/www/data/df_gapCount_table.csv",
sep = ",", encoding = "UTF-8", na.strings = c("", "NA", "N/A")) %>% na.omit()
gapCountdf_sorted <- gapCountdf[order(factor(gapCountdf$priority, levels = c("high", "medium", "low"))), ]
datatable(gapCountdf_sorted, options = list(searching = FALSE, paging = FALSE))
runApp()
library(shiny)
library(tidyverse)
library(leaflet)
library(leaflet.providers)
library(leaflet.extras)
library(rvest)
library(DT)
library(sp)
library(sf)
library(data.table)
library(plotly)
leaflet() %>% addProviderTiles(providers$Esri.DeLorme)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.DeLorme)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$OpenStreetMap)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.NatGeoWorldMap)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.WorldTopoMap)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.WorldImagery)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.WorldShadedRelief)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.WorldTerrain)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.WorldGrayCanvas)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.WorldPhysical)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.NatGeoWorldMap)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.WorldTopoMap)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.WorldPhysical)
leaflet() %>% setView(lng = 120.5, lat = 22.5, zoom = 7) %>% addProviderTiles(providers$Esri.WorldTopoMap)
