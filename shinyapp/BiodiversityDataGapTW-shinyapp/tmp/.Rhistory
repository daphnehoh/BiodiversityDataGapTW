#setwd("C:/Users/taibi/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/")
setwd("~/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/tmp/")
.packs <- c("httr", "jsonlite", "dplyr", "data.table", "stringr",
"ggplot2", "scales", "RColorBrewer", "tidyr", "tidyverse",
"sf", "parallel", "lwgeom")
sapply(.packs, require, character.only = T)
tbia <- fread("../www/data/tbia_habitat.csv",
sep = ",", colClasses = "character", encoding = "UTF-8", na.strings = c("", "NA", "N/A"))
taicol <- fread("../www/data/TaiCOL_taxon_20240528_taxaSubGroup.csv",
sep = ",", colClasses = "character", encoding = "UTF-8", na.strings = c("", "NA", "N/A"))
species_infraspecies <- c("species", "subspecies", "variety", "subvariety", "form", "subform", "special form")
grid5km_sf <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/tmp/layers/TW_WGS84_land&ocean_grids/0_05degree_tw_landocean_grid.shp")
# load the tbia table
df_map <- tbia[, c("id", "longitude", "latitude", "coordinatePrecision", "coordinateUncertaintyInMeters", "taxaSubGroup")]
## 1. exclude uncertainty in distance
table(df_map$coordinatePrecision)
table(df_map$coordinateUncertaintyInMeters)
df_map <- df_map[df_map$coordinateUncertaintyInMeters <= 5000,] # exclude > 5km (5000 meter) for 5km grid plotting
df_map_stats <- df_map %>%
group_by(taxaSubGroup, latitude, longitude) %>%
count()
df_map_list <- split(df_map_stats, df_map_stats$taxaSubGroup)
catchLocation <- function(x){
x %>%
st_as_sf(coords = c("longitude", "latitude"), remove = FALSE) %>% # set coordinates
st_set_crs(4326) %>%  # table transform to polygon
st_join(., dg_grid, join = st_intersects, left = TRUE, largest = TRUE) %>%
st_drop_geometry(.)
}
#### parallel ####
cpu.cores <- detectCores() -1
cl <- makeCluster(cpu.cores)
clusterEvalQ(cl, { # make sure all clusters are ready
library(tidyverse)
library(data.table)
library(sf)
library(lwgeom)
dg_grid <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/tmp/layers/TW_WGS84_land&ocean_grids/0_05degree_tw_landocean_grid.shp")
dg_grid <- as(dg_grid, "sf")%>%
st_set_crs(4326)
sf_use_s2(F)
}
)
system.time(
df_map_grid <- parLapply(cl, df_map_list, catchLocation)%>%
do.call(rbind,.))
stopCluster(cl)
df_map_grid
### 4 make taxaSubGroup
taxaOccCount_grid <- df_map_grid %>%
group_by(taxaSubGroup, id) %>%
summarise(taxaOccCount = sum(n))
taxaOccCount_grid
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(grid5km_sf, taxaOccCount, by = "id", all.x = TRUE)
### 5 make taxaSubGroup
taxaOccCount <- df_map_grid %>%
group_by(taxaSubGroup, id) %>%
summarise(taxaOccCount = sum(n))
taxaOccCount
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(grid5km_sf, taxaOccCount, by = "id", all.x = TRUE)
taxaOccCount_grid
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(grid5km_sf, taxaOccCount, by = c("taxaSubGroup", "id"), all.x = TRUE)
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(grid5km_sf, taxaOccCount, by = "id", all.x = TRUE)
taxaOccCount_grid
taxaOccCount_grid$taxaOccCount <- fifelse(is.na(taxaOccCount_grid$taxaOccCount), 0, taxaOccCount_grid$taxaOccCount)
taxaOccCount_grid
st_write(taxaOccCount_grid, "../www/data/df_taxa_map.shp")
taxaOccCount <- df_map_grid %>%
group_by(taxaSubGroup, id) %>%
summarise(occCount = sum(n))
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(grid5km_sf, taxaOccCount, by = "id", all.x = TRUE)
taxaOccCount_grid$occCount <- fifelse(is.na(taxaOccCount_grid$occCount), 0, taxaOccCount_grid$occCount)
st_write(taxaOccCount_grid, "../www/data/df_taxa_map.shp")
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(grid5km_sf, taxaOccCount, by = "id", all.x = TRUE)
taxaOccCount_grid$occCount <- fifelse(is.na(taxaOccCount_grid$occCount), 0, taxaOccCount_grid$occCount)
st_write(taxaOccCount_grid, "../www/data/df_taxa_map.shp", append = TRUE)
taxaOccCount <- df_map_grid %>%
group_by(taxaSubGroup, id) %>%
summarise(occCount = sum(n))
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(grid5km_sf, taxaOccCount, by = "id", all.x = TRUE)
taxaOccCount_grid$occCount <- fifelse(is.na(taxaOccCount_grid$occCount), 0, taxaOccCount_grid$occCount)
st_write(taxaOccCount_grid, "../www/data/df_taxa_map.shp", append = TRUE)
taxaOccCount
### 5 make taxaSubGroup
taxaOccCount <- df_map_grid %>%
group_by(taxaSubGroup, id) %>%
summarise(occCount = sum(n))
taxaOccCount
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(grid5km_sf, taxaOccCount, by = c("id", "taxaSubGroup"), all.x = TRUE)
any(duplicated(grid5km_sf[c("id", "taxaSubGroup")]))
any(duplicated(taxaOccCount[c("id", "taxaSubGroup")]))
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(grid5km_sf, taxaOccCount, by = "id", all.x = TRUE)
grid5km_sf
taxaOccCount
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(taxaOccCount, grid5km_sf, by = "id", all.x = TRUE)
taxaOccCount_grid
any(duplicated(taxaOccCount_grid[c("id", "taxaSubGroup")]))
any(duplicated(taxaOccCount_grid["id"]))
table(taxaOccCount_grid$occCount)
### 4 make All records shp
allOccCount <- df_map_grid %>%
group_by(id) %>%
summarise(occCount = sum(n))
allOccCount
### 4.1 combine grid counts with 5km geometry
allOccCount_grid <- merge(allOccCount, grid5km_sf, by = "id", all.x = TRUE)
allOccCount_grid
str(allOccCount_grid)
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(taxaOccCount, grid5km_sf, by = "id", all.x = TRUE)
st_write(taxaOccCount_grid, "../www/data/df_taxa_map.shp", append = TRUE)
taxaOccCount_grid
names(taxaOccCount_grid)
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(taxaOccCount, grid5km_sf, by = "id", all.x = TRUE)
names(taxaOccCount_grid) <- c("id", "tSG", "occCount", "geometry") # rename because ESRI cannot save long field name
taxaOccCount_grid
st_write(taxaOccCount_grid, "../www/data/df_taxa_map.shp", append = TRUE)
taxaOccCount <- df_map_grid %>%
group_by(taxaSubGroup, id) %>%
summarise(occCount = sum(n))
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(taxaOccCount, grid5km_sf, by = "id", all.x = TRUE)
names(taxaOccCount_grid) <- c("id", "tSG", "occCount", "geometry") # rename because ESRI cannot save long field name
st_write(taxaOccCount_grid, "../www/data/df_taxa_map.shp", append = TRUE)
taxaOccCount <- df_map_grid %>%
group_by(taxaSubGroup, id) %>%
summarise(occCount = sum(n))
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(taxaOccCount, grid5km_sf, by = "id", all.x = TRUE)
names(taxaOccCount_grid) <- c("id", "tSG", "occCount", "geometry") # rename because ESRI cannot save long field name
st_write(taxaOccCount_grid, "../www/data/df_taxa_map.shp", append = TRUE)
leaflet %>% addProviderTiles(providers$OpenStreetMap.CH)
library(leaflet.providers)
library(leaflet.extras)
leaflet %>% addProviderTiles(providers$OpenStreetMap.CH)
leaflet %>% addTiles() %>% addProviderTiles(providers$OpenStreetMap.CH)
leaflet %>% addTiles() %>% addProviderTiles(providers$OSM)
leaflet() %>% addProviderTiles(providers$OSM) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$OpenStreetMap) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$OpenStreetMap.CH) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$OpenSeaMap) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$OpenTopoMap) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$SafeCast) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$Stadia.Outdoors) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$Thunderforest) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$Jawg) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$MapBox) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$MapTiler) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$TomTom) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$Esri.OceanBasemap) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$Esri.WorldTopoMap) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$OpenWeatherMap) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$CartoDB) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$AzureMaps) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$OneMapSG) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$Stadia) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$Esri.WorldTopoMap) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$Esri.OceanBasemap) %>% setView(lng = 120, lat = 21, zoom = 7)
leaflet() %>% addProviderTiles(providers$Stadia.Outdoors) %>% setView(lng = 120, lat = 21, zoom = 7)
tbia <- fread("../www/data/tbia_habitat.csv",
sep = ",", colClasses = "character", encoding = "UTF-8", na.strings = c("", "NA", "N/A"))
taicol <- fread("../www/data/TaiCOL_taxon_20240528_taxaSubGroup.csv",
sep = ",", colClasses = "character", encoding = "UTF-8", na.strings = c("", "NA", "N/A"))
species_infraspecies <- c("species", "subspecies", "variety", "subvariety", "form", "subform", "special form")
grid5km_sf <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/tmp/layers/TW_WGS84_land&ocean_grids/0_05degree_tw_landocean_grid.shp")
# load the tbia table
df_map <- tbia[, c("id", "longitude", "latitude", "coordinatePrecision", "coordinateUncertaintyInMeters", "taxaSubGroup")]
## 1. exclude uncertainty in distance
table(df_map$coordinatePrecision)
table(df_map$coordinateUncertaintyInMeters)
df_map <- df_map[df_map$coordinateUncertaintyInMeters <= 5000,] # exclude > 5km (5000 meter) for 5km grid plotting
## 2. map All records to grid
df_map_stats <- df_map %>%
group_by(taxaSubGroup, latitude, longitude) %>%
count()
df_map_list <- split(df_map_stats, df_map_stats$taxaSubGroup)
catchLocation <- function(x){
x %>%
st_as_sf(coords = c("longitude", "latitude"), remove = FALSE) %>% # set coordinates
st_set_crs(4326) %>%  # table transform to polygon
st_join(., dg_grid, join = st_intersects, left = TRUE, largest = TRUE) %>%
st_drop_geometry(.)
}
#### parallel ####
cpu.cores <- detectCores() -1
cl <- makeCluster(cpu.cores)
clusterEvalQ(cl, { # make sure all clusters are ready
library(tidyverse)
library(data.table)
library(sf)
library(lwgeom)
dg_grid <- st_read("/Users/daphne/Documents/GitHub/BiodiversityDataGapTW/shinyapp/BiodiversityDataGapTW-shinyapp/tmp/layers/TW_WGS84_land&ocean_grids/0_05degree_tw_landocean_grid.shp")
dg_grid <- as(dg_grid, "sf")%>%
st_set_crs(4326)
sf_use_s2(F)
}
)
system.time(
df_map_grid <- parLapply(cl, df_map_list, catchLocation)%>%
do.call(rbind,.))
stopCluster(cl)
### 3 make all records table
allOccCount_grid_table <- df_map_grid %>%
group_by(taxaSubGroup) %>%
summarise(allOccCount = sum(n))
fwrite(allOccCount_grid_table, "../www/data/df_spatial_allOccCount_grid_table.csv",
row.names = F, quote = T)
### 4 make All records shp
allOccCount <- df_map_grid %>%
group_by(id) %>%
summarise(occCount = sum(n))
### 4.1 combine grid counts with 5km geometry
allOccCount_grid <- merge(allOccCount, grid5km_sf, by = "id", all.x = TRUE)
st_write(allOccCount_grid, "../www/data/df_map.shp")
taxaOccCount_grid
### 4 make All records shp
allOccCount <- df_map_grid %>%
group_by(id) %>%
summarise(occCount = sum(n))
### 4.1 combine grid counts with 5km geometry
allOccCount_grid <- merge(allOccCount, grid5km_sf, by = "id", all.x = TRUE)
### 5 make taxaSubGroup
taxaOccCount <- df_map_grid %>%
group_by(taxaSubGroup, id) %>%
summarise(occCount = sum(n))
### 5.1 combine grid counts with 5km geometry
taxaOccCount_grid <- merge(taxaOccCount, grid5km_sf, by = "id", all.x = TRUE)
names(taxaOccCount_grid) <- c("id", "tSG", "occCount", "geometry") # rename because ESRI cannot save long field name
taxaOccCount_grid
allOccCount_grid
allOccCount
fwrite(allOccCount, "../www/data/df_spatial_allOccCount.csv",
row.names = F, quote = T) # save for gap section
df_gapCount <- fread("../www/data/df_spatial_allOccCount.csv",
sep = ",", colClasses = "character", encoding = "UTF-8", na.strings = c("", "NA", "N/A"))
df_gapCount
df_gapCount <- fread("../www/data/df_spatial_allOccCount.csv",
sep = ",", encoding = "UTF-8", na.strings = c("", "NA", "N/A"))
df_gapCount
allOccCount_grid
df_gapCount <- st_read("../www/data/df_map.shp")
df_gapCount <- st_read("../www/data/df_map.shp") %>% as.data.frame()
df_gapCount
table(df_gapCount)
table(df_gapCount$occCount)
df_gapCount <- df_gapCount %>%
mutate(priority = case_when(occCount < 10 ~ "high",
occCount >= 10 & occCount < 20 ~ "medium",
occCount > 20 ~ "low"))
df_gapCount
table(df_gapCount$priority)
fwrite(df_gapCount_table, "../www/data/df_gapCount_table.csv",
row.names = F, quote = T)
fwrite(df_gapCount, "../www/data/df_gapCount_table.csv",
row.names = F, quote = T)
df_gapCount_sf <- st_as_sf(df_gapCount , crs = 4326)
df_gapCount_sf
fwrite(df_gapCount_sf, "../www/data/df_gapCount_table.shp",
row.names = F, quote = T)
str(df_gapCount_sf)
str(df_gapCount)
df_gapCount <- st_read("../www/data/df_map.shp")
df_gapCount <- df_gapCount %>%
mutate(priority = case_when(occCount < 10 ~ "high",
occCount >= 10 & occCount < 20 ~ "medium",
occCount > 20 ~ "low"))
df_gapCount
fwrite(df_gapCount, "../www/data/df_gapCount_table.shp",
row.names = F, quote = T)
df_gapCount <- st_read("../www/data/df_map.shp")
df_gapCount <- df_gapCount %>%
mutate(priority = case_when(occCount < 10 ~ "high",
occCount >= 10 & occCount < 20 ~ "medium",
occCount > 20 ~ "low"))
st_write(df_gapCount, "../www/data/df_gapCount_table.shp",
row.names = F, quote = T)
df_gapCount
# save as table
df_gapCount_table <- as.data.frame(df_gapCount) %>%
group_by(priority) %>%
summarise(gridCount = sum(n))
# save as table
df_gapCount_table <- as.data.frame(df_gapCount) %>%
group_by(priority) %>%
summarise(gridCount = sum(occCount))
df_gapCount_table
sum(df_gapCount$occCount)
sum(df_gapCount_table$gridCount)
df_gapCount <- st_read("../www/data/df_map.shp")
df_gapCount <- df_gapCount %>%
mutate(priority = case_when(occCount < 10 ~ "high",
occCount >= 10 & occCount < 20 ~ "medium",
occCount > 20 ~ "low"))
st_write(df_gapCount, "../www/data/df_gapCount_table.shp",
row.names = F, quote = T)
# save as table
df_gapCount_table <- as.data.frame(df_gapCount) %>%
group_by(priority) %>%
summarise(gridCount = sum(occCount))
fwrite(df_gapCount_table, "../www/data/df_gapCount_table.csv",
row.names = F, quote = T)
df_gapCount <- st_read("../www/data/df_map.shp")
df_gapCount <- df_gapCount %>%
mutate(priority = case_when(occCount < 10 ~ "Priority",
occCount >= 10 & occCount < 20 ~ "Intermediate",
occCount > 20 ~ "Non-priority"))
st_write(df_gapCount, "../www/data/df_gapCount_table.shp",
row.names = F, quote = T)
# save as table
df_gapCount_table <- as.data.frame(df_gapCount) %>%
group_by(priority) %>%
summarise(gridCount = sum(occCount))
fwrite(df_gapCount_table, "../www/data/df_gapCount_table.csv",
row.names = F, quote = T)
